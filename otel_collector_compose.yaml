name: elastic-otel-collector-docker-compose
configs:
  logs_metrics_traces.yml:
    file: config/otelcol/logs_metrics_traces.yml
  otelcol.yml:
    file: config/otelcol/otelcol.yml
services:
  otelcol:
    # TODO: configure for APM
    # TODO: health check for otelcol
    command: --config /etc/otelcol/logs_metrics_traces.yml --config /etc/otelcol/config.yml  --config /etc/elastic/api_key.yml
    configs:
      - source: logs_metrics_traces.yml
        target: /etc/otelcol/logs_metrics_traces.yml
      - source: otelcol.yml
        target: /etc/otelcol/config.yml
    container_name: "otelcol"
    depends_on:
      elasticsearch:
        condition: service_healthy
      setup_api_key:
        condition: service_completed_successfully
    deploy:
      resources:
        limits:
          memory: 200M
    develop:
      watch:
        - action: sync+restart
          path: config/otelcol.yml
          target: /etc/otelcol/config.yml
    environment:
      - ELASTIC_AGENT_OTEL
      - ELASTIC_API_KEY=x # This is overriden and ignored
      - ELASTIC_APM_SERVER_PORT
      - ELASTIC_ENDPOINT
      - ELASTIC_PASSWORD
      - ES_PORT
      - KIBANA_PORT
      - OTEL_COLLECTOR_PORT_GRPC
      - OTEL_COLLECTOR_PORT_HTTP
      - STORAGE_DIR=/usr/share/elastic-agent
    hostname: host.docker.internal
    image: ${COLLECTOR_CONTRIB_IMAGE}
    ports:
      - "${OTEL_COLLECTOR_PORT_GRPC}:${OTEL_COLLECTOR_PORT_GRPC}"
      - "${OTEL_COLLECTOR_PORT_HTTP}:${OTEL_COLLECTOR_PORT_HTTP}"
    restart: unless-stopped
    user: 0:0
    volumes:
      - ${HOST_FILESYSTEM}:/hostfs:ro
      - ${DOCKER_SOCK}:/var/run/docker.sock:ro
      - certs:/usr/share/elastic-agent/config/certs
      - eslogs:/usr/share/elastic-agent/logs/es
      - etc:/etc/elastic
      - kibana_logs:/usr/share/elastic-agent/logs/kibana
      - otel_registry:/usr/share/elastic-agent/otel_registry

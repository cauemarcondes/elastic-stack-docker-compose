# [OpenTelemetry collector configuration](https://opentelemetry.io/docs/collector/configuration/)
#
# The configuration for this environment attempts to track the Elastic default configurations in https://github.com/elastic/elastic-agent/tree/main/internal/pkg/otel/samples/linux, but with other enhancements.
# [Receivers](https://github.com/open-telemetry/opentelemetry-collector/tree/main/receiver#readme)
receivers:
  # [File Log Receiver](https://github.com/open-telemetry/opentelemetry-collector-contrib/blob/main/receiver/filelogreceiver/README.md)
  filelog/platformlogs:
    include:
    - /var/log/*.log
    - /var/log/**/*.log
    retry_on_failure:
      enabled: true
    start_at: end
  filelog/kibanalogs:
    operators:
    - type: json_parser
    include:
    - /var/log/kibana/kibana.log
  # [Host Metrics Receiver](https://github.com/open-telemetry/opentelemetry-collector-contrib/blob/main/receiver/hostmetricsreceiver/README.md)
  hostmetrics/system:
    collection_interval: 30s
    scrapers:
      disk:
      filesystem:
      cpu:
        metrics:
          system.cpu.utilization:
            enabled: true
          system.cpu.logical.count:
            enabled: true
      memory:
        metrics:
          system.memory.utilization:
            enabled: true
      process:
        mute_process_exe_error: true
        mute_process_io_error: true
        mute_process_user_error: true
        metrics:
          process.threads:
            enabled: true
          process.open_file_descriptors:
            enabled: true
          process.memory.utilization:
            enabled: true
          process.disk.operations:
            enabled: true
      network:
      processes:
      load:
  # [HTTP Check Receiver](https://github.com/open-telemetry/opentelemetry-collector-contrib/blob/main/receiver/httpcheckreceiver/README.md)
  # TODO: Route checks to different data streams
  httpcheck:
    targets:
    - endpoint: https://elastic:${env:ELASTIC_PASSWORD}@elasticsearch:${env:ES_PORT}
      tls:
          ca_file: /usr/share/elastic-agent/config/certs/ca/ca.crt
    - endpoint: http://kibana:${env:KIBANA_PORT}/api/status
      tls:
          ca_file: /usr/share/elastic-agent/config/certs/ca/ca.crt
    # TODO: fix http check for collector (See https://github.com/open-telemetry/opentelemetry-collector-contrib/blob/main/extension/healthcheckextension/README.md)
      # - endpoint: http://otelcol:${env:OTEL_COLLECTOR_PORT_GRPC}
      #   tls:
      #     ca_file: /usr/share/elastic-agent/config/certs/ca/ca.crt
      #     cert_file: /usr/share/elastic-agent/config/certs/elasticsearch/elasticsearch.crt
      #     key_file: /usr/share/elastic-agent/config/certs/elasticsearch/elasticsearch.key
  # [OTLP Receiver](https://github.com/open-telemetry/opentelemetry-collector/blob/main/receiver/otlpreceiver/README.md)
  otlp/fromsdk:
    protocols:
      grpc:
        endpoint: otelcol:${env:OTEL_COLLECTOR_PORT_GRPC}
      http:
        cors:
          allowed_origins:
          - "http://*"
          - "https://*"
        endpoint: otelcol:${env:OTEL_COLLECTOR_PORT_HTTP}
# [Processors](https://github.com/open-telemetry/opentelemetry-collector/tree/main/processor#readme)
processors:
  # [Attributes Processor](https://github.com/open-telemetry/opentelemetry-collector-contrib/blob/main/processor/attributesprocessor/README.md)
  attributes/dataset:
    actions:
    - action: upsert
      from_attribute: data_stream.dataset
      key: event.dataset
  attributes/kibanalogs:
    actions:
    - action: upsert
      key: data_stream.dataset
      value: kibana
  # [Elastic Infra Metrics Processor](https://github.com/elastic/opentelemetry-collector-components/blob/main/processor/elasticinframetricsprocessor/README.md)
  elasticinframetrics: {}
  # [Resource Detection Processor](https://github.com/open-telemetry/opentelemetry-collector-contrib/blob/main/processor/resourcedetectionprocessor/README.md)
  resourcedetection:
    detectors:
    - system
    system:
      hostname_sources:
      - os
      resource_attributes:
        host.arch:
          enabled: true
        host.cpu.cache.l2.size:
          enabled: true
        host.cpu.family:
          enabled: true
        host.cpu.model.id:
          enabled: true
        host.cpu.model.name:
          enabled: true
        host.cpu.stepping:
          enabled: true
        host.cpu.vendor.id:
          enabled: true
        host.id:
          enabled: true
        host.ip:
          enabled: true
        host.mac:
          enabled: true
        host.name:
          enabled: true
        os.description:
          enabled: true
        os.type:
          enabled: true
  # [Resource Processor](https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/main/processor/resourceprocessor)
  resource/kibanalogs:
    attributes:
    - action: insert
      key: service.name
      value: kibana
  resource/process:
    attributes:
    - action: delete
      key: process.executable.name
    - action: delete
      key: process.executable.path
# [Exporters](https://github.com/open-telemetry/opentelemetry-collector/tree/main/exporter#readme)
exporters:
  # [Debug exporter](https://github.com/open-telemetry/opentelemetry-collector/blob/main/exporter/debugexporter/README.md)
  debug:
    verbosity: basic
  # [Elasticsearch exporter](https://github.com/open-telemetry/opentelemetry-collector-contrib/blob/main/exporter/elasticsearchexporter/README.md)
  elasticsearch:
    endpoint: https://elasticsearch:${env:ES_PORT}
    # api_key: (loaded from /etc/elastic/api_key.yaml)
    mapping:
      mode: otel
    logs_dynamic_index:
      enabled: true
    metrics_dynamic_index:
      enabled: true
    tls:
      ca_file: /usr/share/elastic-agent/config/certs/ca/ca.crt
    traces_dynamic_index:
      enabled: true
# [Service Section](https://opentelemetry.io/docs/collector/configuration/#service)
service:
  pipelines:
    logs/kibanalogs:
      receivers:
      - filelog/kibanalogs
      processors:
      - attributes/dataset
      - attributes/kibanalogs
      - resourcedetection
      - resource/kibanalogs
      exporters:
      - elasticsearch
    logs/platformlogs:
      receivers:
      - filelog/platformlogs
      processors:
      - resourcedetection
      exporters:
      - elasticsearch
    metrics/hostmetrics:
      receivers:
      - hostmetrics/system
      processors:
      - elasticinframetrics
      - resourcedetection
      - attributes/dataset
      - resource/process
      exporters:
      - elasticsearch
      - debug
    metrics/httpcheck:
      receivers:
      - httpcheck
      processors:
      - resourcedetection
      exporters:
      - elasticsearch
      - debug
    traces/fromsdk:
      receivers:
      - otlp/fromsdk
      processors:
      - resourcedetection
      exporters:
      - elasticsearch
      - debug
  telemetry:
    logs:
      disable_stacktrace: true
      level: WARN
